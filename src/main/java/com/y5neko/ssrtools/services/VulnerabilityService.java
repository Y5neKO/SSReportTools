package com.y5neko.ssrtools.services;

import com.y5neko.ssrtools.utils.LogUtils;
import com.y5neko.ssrtools.utils.MiscUtils;
import org.yaml.snakeyaml.Yaml;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

import static com.y5neko.ssrtools.config.GlobalConfig.VULN_WIKI_FILE_PATH;

/**
 * 漏洞服务类
 */
public class VulnerabilityService {
    private final Map<String, Vulnerability> vulnerabilityMap = new HashMap<>();

    /**
     * 从磁盘加载YAML文件初始化漏洞库
     */
    public VulnerabilityService() throws FileNotFoundException {
        Yaml yaml = new Yaml();
        File file = new File(MiscUtils.getAbsolutePath(VULN_WIKI_FILE_PATH));

        if (!file.exists()) {
            throw new FileNotFoundException("漏洞库文件未找到: " + file.getAbsolutePath());
        }

        try (FileInputStream inputStream = new FileInputStream(file)) {
            Map<String, List<Map<String, String>>> data = yaml.load(inputStream);
            List<Map<String, String>> vulnerabilities = data.get("vulnerabilities");

            for (Map<String, String> vuln : vulnerabilities) {
                String name = vuln.get("name");
                vulnerabilityMap.put(name, new Vulnerability(
                        name,
                        vuln.get("harm"),
                        vuln.get("description"),
                        vuln.get("risklevel"),
                        vuln.get("suggustion")
                ));
            }
        } catch (Exception e) {
            LogUtils.error(VulnerabilityService.class, "加载漏洞库失败：" + e.getMessage());
        }
    }

    /**
     * 根据漏洞名称获取漏洞详情
     * @param name 漏洞名称（精确匹配）
     * @return 漏洞对象，不存在时返回null
     */
    public Vulnerability getVulnerability(String name) {
        return vulnerabilityMap.get(name);
    }

    /**
     * 漏洞实体类
     */
    public static class Vulnerability {
        private String name = "漏洞库中不存在";
        private String harm = "漏洞库中不存在";
        private String description = "漏洞库中不存在";
        private String riskLevel = "漏洞库中不存在";
        private String suggustion = "漏洞库中不存在";

        public Vulnerability(String name, String harm, String description, String riskLevel, String suggustion) {
            this.name = name;
            this.harm = harm;
            this.description = description;
            this.riskLevel = riskLevel;
            this.suggustion = suggustion;
        }

        // Getters
        public String getName() { return name; }
        public String getHarm() { return harm; }
        public String getDescription() { return description; }
        public String getRiskLevel() { return riskLevel; }
        public String getSuggustion() { return suggustion; }
    }
}